using System;
using System.Speech.Recognition;
using System.Windows.Forms;

namespace StartForm {
    public partial class Start : Form {
        public SpeechRecognitionEngine SREngine;

        public Start()
        {
            InitializeComponent();
            SetupSpeechRecognition();

            StartPosition = FormStartPosition.CenterScreen;
        }

        private void SetupSpeechRecognition()
        {
            SREngine = new SpeechRecognitionEngine();
            SREngine.SetInputToDefaultAudioDevice();

            var login = new Grammar(new Choices("log in", "login", "log me in")) { Name = "login" };
            SREngine.LoadGrammar(login);

            var signup = new Grammar(new Choices("sign up", "signup", "sign me up")) { Name = "signup" };
            SREngine.LoadGrammar(signup);

            var exit = new Grammar(new Choices("exit", "quit", "close")) { Name = "exit" };
            SREngine.LoadGrammar(exit);

            var help = new Grammar(new Choices("help", "help me")) { Name = "help" };
            SREngine.LoadGrammar(help);

            var secret = new Grammar(new GrammarBuilder("password")) { Name = "secret" };
            SREngine.LoadGrammar(secret);

            SREngine.SpeechRecognized += SREngine_SpeechRecognized;
            SREngine.RecognizeAsync(RecognizeMode.Multiple);
        }

        private void SREngine_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)
        {
            switch ( e.Result.Grammar.Name ) {
                case "login":
                    B_Login.PerformClick();
                    break;
                case "signup":
                    B_Signup.PerformClick();
                    break;
                case "exit":
                    B_Exit.PerformClick();
                    break;
                case "help":
                    Help.ShowPopup(this, "Help For Voice Control\n\nSay 'Log (me) in' to login.\nSay 'Sign (me) up' to signup.\n\nYou have been helped.", Location);
                    break;
                case "secret":
                    System.Diagnostics.Process.Start("https://youtu.be/dQw4w9WgXcQ");
                    break;
                default:
                    throw new Exception($"WHAT: {e.Result.Grammar.Name}, {e.Result.Text}");//tmp
            }
        }

        private void Login()
        {
            SREngine.RecognizeAsyncCancel();
            SREngine.SpeechRecognized -= SREngine_SpeechRecognized;

            MessageBox.Show("Logging you in...");

            Hide();
            notifyIconJ.Visible = true;

            Joke joke = new Joke(this);
            joke.Run();
        }

        private void B_Login_Click(object sender, EventArgs e)
        {
            if ( string.IsNullOrWhiteSpace(TB_Name.Text) || string.IsNullOrWhiteSpace(TB_Password.Text) ) {
                MessageBox.Show("Text boxes cannot be empty.", "Invaild Input", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
            bool isCorrect = SqlHelper.CheckUser(TB_Name.Text, TB_Password.Text);

            if ( isCorrect ) {
                Login();
            }
            else {
                MessageBox.Show("Inncorect username or password", " !", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void B_Signup_Click(object sender, EventArgs e)
        {
            if ( string.IsNullOrWhiteSpace(TB_Name.Text) || string.IsNullOrWhiteSpace(TB_Password.Text) ) {
                MessageBox.Show("Text boxes cannot be empty.", "Invaild Input", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
            bool isSuccessful = SqlHelper.SaveUser(TB_Name.Text, TB_Password.Text);

            if ( isSuccessful ) {
                Login();
            }
            else {
                MessageBox.Show("Username already taken.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void B_Exit_Click(object sender, EventArgs e)
        {
            MessageBox.Show("You cannot close this.");
        }
    }
}
